name: Unity WebGL Automatic Build ðŸ‘½âœ¨ðŸš€

on:
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Unity Build ðŸ‘½
    runs-on: ubuntu-latest
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache Unity Library
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build Unity WebGL project
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          buildPath: build/WebGL
          allowDirtyBuild: true

      # Zip the WebGL build
      - name: Zip WebGL build
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r WebGL.zip build/WebGL

      # Upload WebGL Build ZIP as an artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: WebGL-Build
          path: WebGL.zip

      # Stash build result and reset local changes
      - name: Stash build result and reset local changes
        run: |
          echo "Applying initial configs"
          sudo chown -R $USER:$USER build/WebGL
          git config --global user.email "${{ secrets.GH_EMAIL }}"
          git config --global user.name "${{ secrets.GH_USERNAME }}"
          echo "Stash and reset"
          git add build/WebGL
          git stash push build/WebGL
          git stash list
          git reset --hard
          sudo git clean -d -x -f

      # Clean gh-pages branch
      - name: Clean gh-pages branch
        run: |
          echo "Switching to gh-pages branch"
          git fetch origin
          git switch -f gh-pages
          git reset --hard
          sudo git clean -d -x -f
          rm -r *
          git add -A
          git commit -m "Cleaning branch"
          git push

      # Apply stashed files to gh-pages branch
      - name: Apply stashed files to gh-pages branch
        run: |
          echo "Applying stash"
          git stash apply stash@{0}

      # Copy files to root directory
      - name: Copy files to root directory
        run: |
          cd build/WebGL/WebGL
          ls
          cp -r * ../../../
          cd ../../../
          rm -r build
          ls
          pwd

      # Commit and push deployment to gh-pages branch
      - name: Push deployment to gh-pages branch
        run: |
          pwd
          git status
          git add -A
          git commit -m "Deployment"
          git push
          git reset --hard
          sudo git clean -d -x -f
