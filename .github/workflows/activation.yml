name: Unity WebGL Automatic Build ðŸ‘½âœ¨ðŸš€

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:    
      - 'main'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Unity Build ðŸ‘½
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache Unity Library
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build Unity project
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          buildPath: build/WebGL
          allowDirtyBuild: true
      
      # Upload WebGL Build ZIP as an artifact (optional)
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: WebGL-Build
          path: build/WebGL

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build
          
      # Wait for existing pages deployment to complete
      - name: Wait for GitHub Pages deployment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Waiting for GitHub Pages deployment to complete..."
          while gh api repos/${{ github.repository }}/actions/runs | jq -r '.workflow_runs[] | select(.name == "pages-build-deployment") | select(.status == "in_progress") | .id' | grep . > /dev/null; do echo "Waiting..."; sleep 10; done
          
      # Checkout the gh-pages branch
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: 'gh-pages'
          fetch-depth: 0

      # Move WebGL build to root directory
      - name: Move WebGL build to root directory
        run: |
          sudo cp -r build/WebGL/* ./
          sudo rm -rf build/WebGL

      # Commit and push changes
      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "${{ secrets.GH_EMAIL }}"
          git config --global user.name "${{ secrets.GH_USERNAME }}"
          git add -A
          git commit -m "Deployment"
          git push origin gh-pages
