name: Unity WebGL Automatic Build ðŸ‘½âœ¨ðŸš€

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:    
      - 'main'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  free-disk-space:
    runs-on: ubuntu-latest
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

  build:
    name: Unity Build ðŸ‘½
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache Unity Library
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
            
      - name: Free Disk Space for Android
        run: |
         sudo swapoff -a
         sudo rm -f /swapfile
         sudo apt clean
         docker rmi $(docker images -q)
         df -h

      # Build Unity project
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          buildPath: build/WebGL
          allowDirtyBuild: true
      
      # Upload WebGL Build ZIP as an artifact (optional)
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: WebGL-Build
          path: build/WebGL

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build

         # Wait for 30 seconds
      - name: Wait for 30 seconds
        run: sleep 30
      
      # Stash changes before checking out gh-pages branch
      - name: Stash changes
        run: |
          git stash -u
      
      # Force checkout gh-pages branch
      - name: Force checkout gh-pages branch
        run: |
          git fetch origin gh-pages
          git checkout -B gh-pages origin/gh-pages
      
      # Apply the stashed changes (if any)
      - name: Apply stashed changes
        run: |
          git stash pop || echo "No changes to apply from stash"
      
      # Find and move files to the root folder
      - name: Find and move files to root
        run: |
          mv $(find . -type d -name 'Build') ./
          mv $(find . -type f -name 'index.html') ./
      
      # Commit and Push changes using git-auto-commit-action
      - name: Commit and Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Move Build folder and index.html to root"
          branch: gh-pages

